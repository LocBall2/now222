-- Fractucul-Style AutoJoiner with Real Job ID Monitoring
-- Usage: Execute with _G.DISCORD_TOKEN = "your_token_here"

local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local CoreGui = game:GetService("CoreGui")
local HttpService = game:GetService("HttpService")

local player = Players.LocalPlayer

-- Discord configuration
local DISCORD_TOKEN = _G.DISCORD_TOKEN or ""
local DISCORD_GATEWAY = "wss://gateway.discord.gg/?v=10&encoding=json"

-- Create main UI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "FractuculAutoJoiner"
screenGui.Parent = CoreGui
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- Main container
local mainContainer = Instance.new("Frame")
mainContainer.Name = "MainContainer"
mainContainer.Size = UDim2.new(0, 380, 0, 280)
mainContainer.Position = UDim2.new(0.05, 0, 0.65, 0)
mainContainer.BackgroundColor3 = Color3.fromRGB(20, 20, 25)
mainContainer.BorderSizePixel = 0
mainContainer.Parent = screenGui

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 8)
corner.Parent = mainContainer

-- Title bar
local titleBar = Instance.new("Frame")
titleBar.Name = "TitleBar"
titleBar.Size = UDim2.new(1, 0, 0, 30)
titleBar.BackgroundColor3 = Color3.fromRGB(15, 15, 20)
titleBar.BorderSizePixel = 0
titleBar.Parent = mainContainer

local titleCorner = Instance.new("UICorner")
titleCorner.CornerRadius = UDim.new(0, 8)
titleCorner.Parent = titleBar

local title = Instance.new("TextLabel")
title.Name = "Title"
title.Size = UDim2.new(1, -40, 1, 0)
title.Position = UDim2.new(0, 10, 0, 0)
title.BackgroundTransparency = 1
title.Text = "Fractucul AutoJoiner"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Font = Enum.Font.GothamBold
title.TextSize = 14
title.TextXAlignment = Enum.TextXAlignment.Left
title.Parent = titleBar

-- Close button
local closeButton = Instance.new("TextButton")
closeButton.Name = "CloseButton"
closeButton.Size = UDim2.new(0, 30, 1, 0)
closeButton.Position = UDim2.new(1, -30, 0, 0)
closeButton.BackgroundTransparency = 1
closeButton.Text = "X"
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeButton.Font = Enum.Font.GothamBold
closeButton.TextSize = 14
closeButton.Parent = titleBar

closeButton.MouseButton1Click:Connect(function()
    screenGui:Destroy()
end)

-- Status panel
local statusPanel = Instance.new("Frame")
statusPanel.Name = "StatusPanel"
statusPanel.Size = UDim2.new(1, -20, 0, 30)
statusPanel.Position = UDim2.new(0, 10, 0, 40)
statusPanel.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
statusPanel.BorderSizePixel = 0
statusPanel.Parent = mainContainer

local statusCorner = Instance.new("UICorner")
statusCorner.CornerRadius = UDim.new(0, 6)
statusCorner.Parent = statusPanel

local statusLabel = Instance.new("TextLabel")
statusLabel.Name = "StatusLabel"
statusLabel.Size = UDim2.new(1, -10, 1, 0)
statusLabel.Position = UDim2.new(0, 10, 0, 0)
statusLabel.BackgroundTransparency = 1
statusLabel.Text = "Status: Ready"
statusLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
statusLabel.Font = Enum.Font.Gotham
statusLabel.TextSize = 12
statusLabel.TextXAlignment = Enum.TextXAlignment.Left
statusLabel.Parent = statusPanel

-- Toggle button
local toggleButton = Instance.new("TextButton")
toggleButton.Name = "ToggleButton"
toggleButton.Size = UDim2.new(1, -20, 0, 40)
toggleButton.Position = UDim2.new(0, 10, 0, 80)
toggleButton.BackgroundColor3 = Color3.fromRGB(60, 160, 60)
toggleButton.BorderSizePixel = 0
toggleButton.Text = "START AUTOJOINER"
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.Font = Enum.Font.GothamBold
toggleButton.TextSize = 14
toggleButton.Parent = mainContainer

local toggleCorner = Instance.new("UICorner")
toggleCorner.CornerRadius = UDim.new(0, 6)
toggleCorner.Parent = toggleButton

-- Stats panel
local statsPanel = Instance.new("Frame")
statsPanel.Name = "StatsPanel"
statsPanel.Size = UDim2.new(1, -20, 0, 80)
statsPanel.Position = UDim2.new(0, 10, 0, 130)
statsPanel.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
statsPanel.BorderSizePixel = 0
statsPanel.Parent = mainContainer

local statsCorner = Instance.new("UICorner")
statsCorner.CornerRadius = UDim.new(0, 6)
statsCorner.Parent = statsPanel

local serversLabel = Instance.new("TextLabel")
serversLabel.Name = "ServersLabel"
serversLabel.Size = UDim2.new(0.5, -5, 0.5, -5)
serversLabel.Position = UDim2.new(0, 10, 0, 10)
serversLabel.BackgroundTransparency = 1
serversLabel.Text = "Servers: 0"
serversLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
serversLabel.Font = Enum.Font.Gotham
serversLabel.TextSize = 12
serversLabel.TextXAlignment = Enum.TextXAlignment.Left
serversLabel.Parent = statsPanel

local moneyLabel = Instance.new("TextLabel")
moneyLabel.Name = "MoneyLabel"
moneyLabel.Size = UDim2.new(0.5, -5, 0.5, -5)
moneyLabel.Position = UDim2.new(0.5, 5, 0, 10)
moneyLabel.BackgroundTransparency = 1
moneyLabel.Text = "Money: $0"
moneyLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
moneyLabel.Font = Enum.Font.Gotham
moneyLabel.TextSize = 12
moneyLabel.TextXAlignment = Enum.TextXAlignment.Left
moneyLabel.Parent = statsPanel

local lastServerLabel = Instance.new("TextLabel")
lastServerLabel.Name = "LastServerLabel"
lastServerLabel.Size = UDim2.new(1, -20, 0.5, -5)
lastServerLabel.Position = UDim2.new(0, 10, 0.5, 5)
lastServerLabel.BackgroundTransparency = 1
lastServerLabel.Text = "Last: None"
lastServerLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
lastServerLabel.Font = Enum.Font.Gotham
lastServerLabel.TextSize = 12
lastServerLabel.TextXAlignment = Enum.TextXAlignment.Left
lastServerLabel.Parent = statsPanel

-- WebSocket connection info
local wsInfo = Instance.new("TextLabel")
wsInfo.Name = "WSInfo"
wsInfo.Size = UDim2.new(1, -20, 0, 30)
wsInfo.Position = UDim2.new(0, 10, 0, 220)
wsInfo.BackgroundTransparency = 1
wsInfo.Text = "WebSocket: 127.0.0.1:51948"
wsInfo.TextColor3 = Color3.fromRGB(150, 150, 150)
wsInfo.Font = Enum.Font.Gotham
wsInfo.TextSize = 10
wsInfo.TextXAlignment = Enum.TextXAlignment.Left
wsInfo.Parent = mainContainer

-- AutoJoiner logic
local isRunning = false
local serversJoined = 0
local totalMoney = 0
local minMoney = 10 -- Minimum 10M/s
local maxPlayers = 7 -- Don't join if 7/8 or 8/8
local discordConnected = false
local websocket = nil

-- Check if token is provided
if DISCORD_TOKEN == "" then
    statusLabel.Text = "Error: Execute with _G.DISCORD_TOKEN"
else
    statusLabel.Text = "Token found! Ready to start"
end

-- Function to parse money from string
local function parseMoney(moneyStr)
    if not moneyStr then return 0 end
    local cleanStr = string.gsub(moneyStr, "[^%d%.]", "")
    if string.find(moneyStr, "K") then
        return tonumber(cleanStr) * 1000
    elseif string.find(moneyStr, "M") then
        return tonumber(cleanStr) * 1000000
    else
        return tonumber(cleanStr) or 0
    end
end

-- Function to connect to WebSocket server (like Fractucul)
local function connectToWebSocket()
    statusLabel.Text = "Connecting to WebSocket..."
    
    -- This connects to the local WebSocket server that monitors Discord
    -- (This is how Fractucul works - external program handles Discord)
    local success, ws = pcall(function()
        return WebSocket.connect("ws://127.0.0.1:51948")
    end)
    
    if success and ws then
        websocket = ws
        statusLabel.Text = "Connected to WebSocket!"
        
        websocket.OnMessage:Connect(function(message)
            if isRunning then
                -- Parse the message (should contain job info)
                local success, data = pcall(function()
                    return HttpService:JSONDecode(message)
                end)
                
                if success and data then
                    -- Extract server info from the message
                    local serverInfo = {
                        name = data.name or "Unknown",
                        money = data.money or "0M",
                        players = data.players or "0/8",
                        jobId = data.jobId or data.script
                    }
                    
                    if serverInfo.jobId then
                        joinJobInstantly(serverInfo.jobId, serverInfo.money, serverInfo.players, serverInfo.name)
                    end
                else
                    -- Try to extract job ID directly from message
                    local jobId = string.match(message, "7IRZ[%w=]+")
                    if jobId and isRunning then
                        joinJobInstantly(jobId, "10M", "0/8", "Chilli Hub Server")
                    end
                end
            end
        end)
        
        websocket.OnClose:Connect(function()
            statusLabel.Text = "WebSocket disconnected"
            websocket = nil
            if isRunning then
                -- Try to reconnect after a delay
                wait(3)
                connectToWebSocket()
            end
        end)
        
        return true
    else
        statusLabel.Text = "WebSocket not found - start external program"
        return false
    end
end

-- Function to join a job instantly
local function joinJobInstantly(jobId, money, players, serverName)
    if not jobId or jobId == "" or #jobId < 30 then
        statusLabel.Text = "Invalid Job ID"
        return false
    end
    
    -- Check if server meets criteria
    local moneyValue = parseMoney(money)
    local currentPlayers = tonumber(string.match(players, "(%d+)/")) or 0
    
    if moneyValue < minMoney * 1000000 then
        statusLabel.Text = "Skipped: Money too low (" .. money .. ")"
        return false
    end
    
    if currentPlayers >= maxPlayers then
        statusLabel.Text = "Skipped: Server full (" .. players .. ")"
        return false
    end
    
    -- Join the server instantly
    statusLabel.Text = "Joining " .. (serverName or "server") .. "..."
    lastServerLabel.Text = "Last: " .. (serverName or "Unknown")
    
    -- Use Roblox's TeleportService to join the server
    local success, result = pcall(function()
        TeleportService:TeleportToPlaceInstance(game.PlaceId, jobId, player)
    end)
    
    if success then
        serversJoined = serversJoined + 1
        totalMoney = totalMoney + moneyValue
        serversLabel.Text = "Servers: " .. serversJoined
        moneyLabel.Text = "Money: $" .. totalMoney
        statusLabel.Text = "Joined successfully!"
        return true
    else
        statusLabel.Text = "Failed to join: " .. tostring(result)
        return false
    end
end

-- Toggle button functionality
toggleButton.MouseButton1Click:Connect(function()
    if DISCORD_TOKEN == "" then
        statusLabel.Text = "Error: Execute with _G.DISCORD_TOKEN"
        return
    end
    
    isRunning = not isRunning
    
    if isRunning then
        toggleButton.BackgroundColor3 = Color3.fromRGB(200, 60, 60)
        toggleButton.Text = "STOP AUTOJOINER"
        connectToWebSocket()
    else
        toggleButton.BackgroundColor3 = Color3.fromRGB(60, 160, 60)
        toggleButton.Text = "START AUTOJOINER"
        if websocket then
            websocket:Close()
            websocket = nil
        end
        statusLabel.Text = "Stopped - Ready"
    end
end)

-- Make the window draggable
local dragging
local dragInput
local dragStart
local startPos

local function update(input)
    local delta = input.Position - dragStart
    mainContainer.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

titleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = mainContainer.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

titleBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

-- Initial setup
statusLabel.Text = "Ready - Start AutoJoiner"
serversLabel.Text = "Servers: 0"
moneyLabel.Text = "Money: $0"
lastServerLabel.Text = "Last: None"

print("Fractucul-Style AutoJoiner loaded!")
print("This script connects to a WebSocket server at 127.0.0.1:51948")
print("Make sure you have the external Discord monitor running")
print("Click START AUTOJOINER to begin")
